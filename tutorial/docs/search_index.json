[["index.html", "Supplementary Materials - QuickOmics Chapter 1 Preface", " Supplementary Materials - QuickOmics This name list has not been finalized!!! Jing Zhu Biogen jing.zhu@biogen.com Zhengyu Ouyang BioInfoRx oyoung@bioinforx.com Wei Li BioInfoRx weili@bioinforx.com Hima Yalamanchili Biogen hima.yalamanchili@biogen.com Maria Zavodszky Biogen maria.zavodszky@biogen.com Yu (Henry) Sun (Re-built the bookdown tutorial) Biogen yuhenry.sun@biogen.com David Sexton Biogen david.sexton@biogen.com Kejie Li Biogen kejie.li@biogen.com Fergal Casey Biogen fergal.casey@biogen.com Xinmin Zhang BioInfoRx xinmin.zhang@biogen.com Baohong Zhang (Corresponding Author) Biogen baohong.zhang@biogen.com 2022-01-06 Chapter 1 Preface This is a supplementary materials written using Bookdown, which provides a detailed guide for QuickOmics. "],["introduction.html", "Chapter 2 Introduction 2.1 Integrated Gene Set Query", " Chapter 2 Introduction The Quickomics tool can be accessed via the link http://quickomics.bxgenomics.com. Implemented through R Shiny, it helps with visualizing statistical analysis results for RNAseq and Proteomics datasets. This supplemental tutorial provides a detailed guide on using the different functionalities and customizing the tools to best fit individual analysis and plotting needs, using published RNAseq dataset and proteomics dataset as examples (Gyoneva et al., 2019; Connor-Robson et al., 2019). The interface contains multiple tabs, corresponding to different functional modules, that can be accessed on top panel of the webpage. Users have the option to upload their own dataset or choose from existing demo datasets for visualization. 2.1 Integrated Gene Set Query To supply genes in pre-defined gene sets to plotting functions in Quickomics, we developed xGenesets API for Quickomics to query and retrieve a list of genes/proteins when it is needed. The lists can be defined based on pathways, and gene sets from various sources, including KEGG Pathways (Kanehisa and Goto, 2000), WikiPathways (Martens et al., 2020), Small Molecule Pathway Database (Frolkis et al., 2010), Reactome (Jassal et al., 2020), Gene Ontology (The Gene Ontology Consortium, 2019), Molecular Signatures (Subramanian et al., 2005; Liberzon et al., 2015), and LIPID MAPS Proteome Database (Cotter et al., 2006). xGenesets database currently has 175,537 gene sets stored in MySQL tables, covering human (115,497 records), mouse (30,554 records) and rat (29,486 records) gene sets. xGenesets features personalized settings, dynamic drop-down list upon typing for quick gene set selection, full gene set database browsing, and a list of genes from any gene sets. Throughout Quickomics, users interact with this convenient tool in appropriate interface when a gene set is needed by checking “Geneset” option and then clicking on “Select Geneset” to pick a set from a table of available gene sets in a popup window as shown in the following screenshot. For developers of web-based applications (general user can skip this paragraph), xGenesets can be easily embedded in any modern websites and online applications, e.g., R Shiny web apps, by leveraging jQuery, DataTables, and bootstrap (either v3 or v4) JavaScript libraries. xGenesets API is freely available for all usages. Examples of using xGenesets API and guidance on setting up the API in your own applications can be found at https://bxaf.net/genesets. "],["select-dataset-module.html", "Chapter 3 Select Dataset Module 3.1 Upload Files 3.2 Prepare R Data Files by Computational Biologists 3.3 Sample Table 3.4 Project Overview 3.5 Result Table 3.6 Data Table 3.7 Protein Gene Names 3.8 Help", " Chapter 3 Select Dataset Module This first module is for selecting dataset. Users can either select from pre-loaded example datasets or upload their own dataset in a pre-defined format as detailed in section 2.1 and in our GitHub page (https://github.com/interactivereport/Quickomics). We have pre-loaded four datasets from published studies that users can use for demonstrative purposes. These includes two RNAseq datasets from Gyoneva et al., 2019 and Connor-Robson et al., 2019; and two proteomics datasets from Connor-Robson et al., 2019. Users can walk through multiple sub-tabs to visualize, select and download figures or data. 3.1 Upload Files For a data set, the “Upload Files” tool allows users to upload three required files, namely sample metadata, normalized expression data and statistical comparison results in csv format (Comma Separated Values) to Quickomics directly. Example data sets are provided in GitHub for both RNAseq (https://bit.ly/2MRkFcb) and proteomics (https://bit.ly/3rn4i6a). Detailed formatting guidance is outlined below, Sample Metadata File: It should have “sampleid” and “group” columns, with additional columns optional. Sample identifiers must match those used in the expression data file. Expression Data File: It should be a matrix of expression values with genes/proteins as rows, and samples as columns. The unique IDs for genes/proteins are in the first column. We recommend using log of normalized expression values, e.g. log2(TPM+1) for RNAseq data or normalized intensity or ratio for proteomics data. Comparison Data File: It should have five columns, “UniqueID”, “test”, “Adj.P.Value”, “P.Value” and “logFC”. The comparison names are listed in “test” column. Please note that wrongly named column headers will cause issues. Optional Gene/Protein Name File: The system has built-in function to convert unique IDs in the data files to gene symbols and create the Gene/Protein Name file, so most users don’t need to prepare the file. Nevertheless, if provided by users, it must have four columns: “id” (sequential numbers like 1,2,3 … …), “UniqueID” (matching IDs used in the expression and comparison data file), “Gene.Name” (official gene symbols), “Protein.ID” (UniProt protein IDs, or keep it empty for RNA-Seq data). Additional columns (e.g. gene biotype) are optional. After the data files are processed, Quickomics will automatically load all required data for exploration immediately and provide a link for the user to come back in the future. Behind the scene, Bioconductor biomaRt package (https://bioconductor.org/packages/release/bioc/html/biomaRt.html) has been used to convert gene IDs (Ensembl gene, NCBI gene ID, etc.) into gene symbols by querying Ensembl databases. For protein IDs, we generated a custom lookup table using information downloaded from UniProt Knowledgebase to convert UniProt IDs to gene symbols and protein names. We didn’t use biomaRt for proteins as Ensembl databases only cover about 60-80% protein IDs in a typical proteomics data set. 3.2 Prepare R Data Files by Computational Biologists We recommend uploading csv files, which is convenient for general users who can skip section 2.2 entirely. Nevertheless, experienced R programmers can create R data files to be uploaded through “Upload RData File” option. Section 2.2.1 and 2.2.2 provide example R scripts to prepare such R data files for RNA-Seq and proteomics data, respectively. Two R data files are required for each data set, one contains the main data and the other contains gene co-expression network information. For the pre-loaded datasets, main data files are located in the “data” folder, https://github.com/interactivereport/Quickomics/tree/master/data, and gene co-expression network files are located in the “networkdata” folder, https://github.com/interactivereport/Quickomics/tree/master/networkdata. One can review the content of a R data file (e.g. Mouse_microglia_RNA-Seq.RData) in the “data” folder by loading it into R. The main R data file contains the following R data frame objects. MetaData: It must have “sampleid”, “group”, “Order” and “ComparePairs” columns. Additional metadata columns about samples are optional. “sampleid” should match those used in expression data. “group” holds group names of samples. “Order” is ordered group names used on plotting. “ComparePairs” are names of comparisons performed. ProteinGeneName: It must have “UniqueID”, “Gene.Name” and “Protein.ID” columns. “UniqueID” matches gene ID in below data_wide and data_long objects. “Gene.Name” should be official gene symbols. “Protein.ID” is UniProt protein IDs, or empty for RNA-Seq data. Additional columns about proteins or genes are optional. data_wide: This is the expression matrix in which rows are genes and columns are samples. Samples must match “sampleid” values in MetaData and gene IDs must match “UniqueID” values in ProteinGeneName. data_long: Gene expression matrix in long format with four columns, “UniqueID”, “sampleid”, “expr” and “group”. “group” values must match those listed in MetaData. results_long: The comparison results in long format with five columns, “UniqueID”, “test”, “Adj.P.Value”, “P.Value” and “logFC”. “UniqueID” matches “UniqueID” in ProteinGeneName. “test” column has the comparison names that must match “ComparePairs” values in MetaData. The other values are typically computed from statistical analysis, but the data headers must be changed to “Adj.P.Value”, “P.Value” and “logFC”. data_results: This is a summary table starting with “UniqueID” and “Gene.Name” columns, then the intensity (max or mean expression value from data_wide for each gene), mean and SD expression values for each group, and finally comparison data (comparison name added as prefix of columns). The network data object is computed from “data_wide” expression matrix by using Hmisc R package exemplified by the code snippet below. cor_res &lt;- Hmisc::rcorr(as.matrix(t(data_wide))) cormat &lt;- cor_res$r pmat &lt;- cor_res$P ut &lt;- upper.tri(cormat) network &lt;- tibble::tibble ( from = rownames(cormat)[row(cormat)[ut]], to = rownames(cormat)[col(cormat)[ut]], cor = signif(cormat[ut], 2), p = signif(pmat[ut], 2), direction = as.integer(sign(cormat[ut])) ) 3.2.1 Example R script to prepare R data files from RNA-Seq results We have provided example input files (TPM and count matrix files, sample grouping file, comparison list file) and the R scripts to generate the main data and network R data files at https://github.com/interactivereport/Quickomics/tree/master/demo_files/Example_RNA_Seq_data. Please note that you may need to modify RNA_Seq_raw2quickomics.R to fit your input files. • rsem_TPM.txt: The TPM matrix. One can also use RPKM matrix if needed. • rsem_expected_count.txt: The gene count matrix. We used RSEM counts in this case, but gene count results from other methods can be used as well. • grpID.txt: This file lists the group information for each sample. • comparison.txt: This list lists the comparisons to perform (group 1 vs group 2 in each row). The following command will read the above data files, run differential gene expression analysis using DESeq2, and create main and network R data files. $ Rscript RNA_Seq_raw2quickomics.R 3.2.2 Example R script to prepare R data files from proteomics results We have provided the example input files (normalized protein expression, comparison data, sample information, protein and gene names) and the R script to generate the main data and network R data files at https://github.com/interactivereport/Quickomics/tree/master/demo_files/Example_Proteomics_data. Please note that you may need to modify Proteomics2Quickomics.R to fit your input files. • NormalizedExpression.csv: Normalized protein expression (log2 transformed). • ComparisonData.csv: Comparison results. The statistic values are: logFC, P.Value and Adj.P.Value. This can be created using R packages like limma. • Sample.csv: Sample information file. • ProteinID_Symbol.csv: This file lists the proteinIDs and associate gene symbols. The following command will read the above data files and create main and network R data files. $ Rscript Proteomics2Quickomics.R 3.3 Sample Table A sample table with metadata/details appears upon completion of dataset loading. Here we have selected the “Mouse Microglia RNA” dataset from the previously published paper (Gyoneva et al., 2019) as an example to illustrate all the functionalities. This publication used RNAseq to conclude that the knockout of the Cx3cr1 gene altered the microglial transcriptome in a manner similar to what ageing does, albeit in a milder extent. Using Quickomics, we can visualize the original results from the paper, as well as provide novel visualizations to support new results. The Sample Table contains detailed info of all study samples. A total of 93 samples that were sequenced in this project are listed in the table with attributes like sampleid, group, Age, Genotype and Gender, shown in different columns. 3.4 Project Overview This tab gives an overview of all samples in the project by providing a summary from the metadata. This includes information like which species was used, the different comparisons run and total number of samples in each group. This tab also helps identify how many groups were present in the dataset, like in this project there are 9 different groups that correspond to three genotypes in each of three time points (WT, Het, KO; 2mo, 1yr, 2yr). 3.5 Result Table This tab contains statistical analysis results like Ensemble ID (for RNAseq data) and Accession ID (for proteomics data), gene name, mRNA or protein abundance (count or intensity), mean and SD values for each group, log2 fold change, P value and adjusted P value. 3.6 Data Table The Data table contains normalized expression values (TPM for RNAseq, intensity for label free proteomic quantification, or ratio for isobaric label proteomics quantification) per sample for each gene. 3.7 Protein Gene Names This tab contains all quantified gene or protein IDs and gene names. 3.8 Help Finally, the “Help” feature summarizes what data is being displayed in each tab under Select Dataset. The Help tab is available for all sections of the subsequent analysis. "],["qc-plots-module.html", "Chapter 4 QC Plots Module 4.1 PCA Plot 4.2 Eigenvalues 4.3 PCA 3D Plot 4.4 PCA 3D Interactive 4.5 Sample-sample Distance 4.6 Dendrograms 4.7 Box Plot 4.8 CV Distribution 4.9 Order Groups 4.10 Help", " Chapter 4 QC Plots Module The “QC Plots” module performs basic QC analyses, as described in following paragraphs, on an uploaded dataset to evaluate integrity and quality of the data. The plots were generated using ggplot, plotly, ComplexHeatmap and pheatmap R packages. 4.1 PCA Plot The principle component analysis (PCA) plot displays, by default, the first 2 PC’s in the dataset and colors study groups with “none” selected in shape and size settings. This plot is highly customizable. Users can change the display by annotating the plot with different colors, shapes, size scheme, as well as label selected subsets data points. Additionally, the “Select Groups” and “Select Samples” feature (Green square) is present in all the QC Plots tabs. The User Is able to remove any particular group or sample from the plots. To illustrate the strengths of customization, we changed a few display elements as shown below, to visualize the influence of Age and Genotype on sample clustering: These changes results in a PCA plot that clearly showed that Age is the factor that drives the biggest separation, especially along PC1. There is some separation driven by the Genotype as well. The Ellipsoid feature helps group samples by the color attribute, while the Marginal Rug feature helps understand the sample distribution along the axis. Furthermore, the plot can be saved in high resolution by clicking on “Save to Output”. Section 12 of this document describes the next steps of downloading and obtaining the saved plots. 4.2 Eigenvalues By default, the PCA plot displays PC1 and PC2 as described in Section 3.1. However, in many cases other PC’s may be important in explaining additional variance in the dataset. This sub-tab generates a plot of the variances versus the first 10 PCs in the dataset, enabling Users to make educated decisions of which PCs to plot in 2D scatter plot. In this dataset PC1 and PC2 together explain around 30% of the variance. PC2 and PC3 were used to redo the PCA plot, but here the factors driving the separation of the samples is not as clear. 4.3 PCA 3D Plot This sub-tab contains a way to perform 3D PCA representation. The functionality is limited to doing so only on PC1, PC2 and PC3. Users can zoom in and out to focus on different areas of the plot or rotate the plot in different axes to find the best separation by age as shown below. There are 3 attributes that can be changed: color, ellipsoid inclusion, and labels of the samples. The “Color By” and “Plot Ellipsoid” attributes were changed in the following plot. This highlights the clear separation of samples by Age and not Genotype, contrary to the original biological hypothesis. 4.4 PCA 3D Interactive This tab is similar to the previous one (3.2 PCA 3D Plot), but here users have the additional capability to hover over the samples on the plot to identify more details, see the pointer below. This was implemented through the plotly package in R. Users can change 2 attributes here, the color and shape. In the plot below, the “Color By” and “Shape By” attributes have been changed to highlight the drivers of separation. 4.5 Sample-sample Distance This tab helps identify pair-wise similarity between all samples. A distance matrix is generated for every sample pair and is plotted as a heatmap. The rows and columns are clustered based on similarity. It is clear from this plot that samples of the same Age have the smaller distances, that is, they have closer gene expression patterns. Here again, Users have the option to save to output. 4.6 Dendrograms Like the previous plot (3.5 Sample-sample Distance), the Dendrogram plot helps visualize hierarchical clustering relationships between samples. The Default plot is Circular and cut into four parts. Users have the option to visualize in two other ways (tree or horizontal) and cut the plot in multiple regions. Here again, Users can save the plot to output. In the plot below, we have selected to visualize as a tree and cut into eight parts. This shows the relationship between the samples to help understand the hierarchal clustering. Overall, the samples are arranged by age, but there are some outliers that appear. It is also interesting how the 2mo samples cluster with the 1yr samples. 4.7 Box Plot The Boxplot is a visualization to understand the distribution of the normalized expression levels in all samples. This identifies the minimum, first quartile, median, third quartile, and maximum values in the dataset. In this demo dataset, most of the samples have the same range of expression, indicating that there are no outliers. 4.8 CV Distribution This plot shows the histogram of CVs (coefficient of variation) and a dotted line for each group indicates the median CV. In this dataset, the 2mon_KO samples have the highest CV while the 2yr_Het samples have the lowest variability, which corresponds to what is visually seen on the PCA plot for these samples in Section 3.1. 4.9 Order Groups In this sub-tab, Users can select and/or re-order the groups in the dataset. The order will be stored in the current session, and labels will be displayed in this preferred order for all plots. Users can either drag and drop a group to reorder or use the select panel to delete and add. In this example the KO genotype was of highest interest and so we have changed the order of the group so that the KO samples are before Het and WT. The changed groups are now visible. To revert back to the default, Users have the option to click “Reset Groups”. As noted above, that the new order of groups will dynamically change all other related visualizations. As an example, a 2D PCA plot reflecting a newly changed group order is shown below. 4.10 Help The Help section describes each tab of the QC Plot and what is being visualized. For further help please visit the GitHub containing the source code for this tools (https://github.com/interactivereport/Quickomics) or click on the link at the bottom of the page. "],["volcano-plot-module.html", "Chapter 5 Volcano Plot Module 5.1 Volcano Plot (Static) 5.2 Volcano Plot (Interactive) 5.3 DEGs and DEPs in Two Comparisons 5.4 Data Table", " Chapter 5 Volcano Plot Module This section is designed to explore the differentially expressed genes (DEGs) and differentially expressed proteins (DEPs) in the dataset. The comparisons are defined by the User when they input the dataset. Please refer to our GitHub for more details on uploading datasets. The “Volcano Plot (Static)” described in Section 4.1 and “Volcano Plot (Interactive)” described in Section 4.2 are ways to visualize each pair-wise comparison one by one. “DEGs/DEPs in Two Comparisons” described in Section 4.3 is a novel way to visualize the similarities and differences in two comparisons. Finally, “Data Table” described in Section 4.4 displays a searchable table containing all genes and their fold changes and P values in each comparison. 5.1 Volcano Plot (Static) This plot reveals the differentially expressed genes provided in the input data file. By default, the Fold change Cutoff is set to 1.2 and the P value Cutoff is set to 0.01. Users have the option to change any of these parameters. For more advanced display options, they can set the “Show More Options” to “Yes” to customize other settings. The red dots are indicative of all genes that pass the Fold Change and P value cutoff, while the green dots are indicative of genes that only pass the P value cutoff. Fifty random genes are labelled for both the up-regulated and down-regulated genes by default. For demonstration purposes, we have changed the following attributes to highlight a few genes in this dataset. We have selected the 2mon_KOvs2mon_WT comparison, where Gyoneva et al., 2019 report immune response genes as the top differentially expressed category. To highlight these genes, in the example below, we select an “Immune Response” dataset from the Molecular Signatures Database (MSigDB) to highlight the genes by adding labels to the volcano plot. As MSigDB contains only human gene lists and the demo dataset is from mouse, Quickomics does a quick conversion of the names of Human genes to Mouse genes by changing the letters after the first one to lowercase. Additionally, in this example we removed some of the genes from the list to reduce size. This visualization was not available in the original publication, but clearly supports the finding that the KO genotypes altered the expression of immune-related genes. 5.2 Volcano Plot (Interactive) This next sub-tab is a very similar visualization as the previous one (4.1 Volcano Plot (Static)) with an additional capability where users can hover over a particular dot/gene on the plot to see more details. This plot has a few attributes that can be changed, and in the example below we have used the same cutoffs and values as in section 4.1. 5.3 DEGs and DEPs in Two Comparisons This next tab helps with identifying DEGs/DEPs that follow a similar trend in two comparisons. Gyoneva et al., 2019, the source of this demo dataset, report that the genes differentially expressed in Cx3cr1 KO microglia in the 2mon KO are quite different from WT, while the differences from WT are smaller for the 1yr KO and 2yr KO, and the two older ages are similar to each other. We have plotted out the following comparisons that illustrate this conclusion. 2mo_KOvs2mo_WT vs 1yr_KOvs1yr_WT has a low correlation score. There are many genes that are colored yellow, meaning those genes were significant in 2mo_KOvs2mo_WT (Y axis) but not in 1yr_KOvs1yr_WT (X axis). Similarly, we changed the X axis to 2yr_KOvs2yr_WT to compare to 2mo_KOvs2mo_WT, and it shows a very similar plot with a low correlation score of 0.178 Next, we changed the Y axis comparison to 1yr_KOvs1yr_WT comparing it to 2yr_KOvs2yr_WT on the X axis. This plot has a higher correlation score of 0.371 than the previous one, suggesting that these two comparisons are more similar. These comparisons represent additional insights supported by statistical analyses that were gained from the data and were not available in the original manuscript by Gyoneva et al. 5.4 Data Table This tab lets the users view the DEGs/DEPs in a tabular format with a searchable feature. Users also have the ability to download the gene list as a CSV. "],["heatmap-module.html", "Chapter 6 Heatmap Module 6.1 Static Heatmap Layout 1 6.2 Static Heatmap Layout 2", " Chapter 6 Heatmap Module This module generates highly customized publication-quality heatmaps with the ComplexHeatmap package in R. Users can enter automated list of differentially expressed genes or enter a custom list of genes to highlight on the heatmap. This module differs from other modules in that each time Users change the attributes; they need to click on the “Plot/Refresh” button to generate the plot. This is to avoid changing the output before all the attribute are added. 6.1 Static Heatmap Layout 1 The “Static Heatmap Layout 1” uses the ComplexHeatmap package (Gu et al., 2016) for generating the plot. For demo purposes, we have selected options that highlight some capabilities to generate informative heatmap. For gene selection the default option is the selection of 100 random genes which can also be changed to variable genes. Here we selected DEGs/DEPs from the 2yr_WTvs2mon_WT comparison. Users also have the option to change the cutoff criteria for filtering the genes. They can also add/remove annotation categories for the samples on the columns. In this heatmap, the top up-regulated genes in 2mon_WT samples are seen as high in 2mon samples but low in 2yr and 1yr samples, while the top up-regulated genes in the 2yr_WT samples are high in the 2yr and 1yr samples but low in the 2mon samples. This is another example that age has a major effect on gene expression in microglia, and the 2mon microglia have a different gene expression profile compared to 1yr and 2yr. In this next example, we customize another Heatmap to highlight immune related genes that were called out in Gyoneva et al., 2019. This is done by uploading a csv file consisting of the gene names with pathway information and the color for display. An example of this file is on our GitHub (Quickomics/demo_files/fig5_all_genes.csv) 6.2 Static Heatmap Layout 2 The “Static Heatmap Layout 2” uses the heatmap.2 function from the gplots package for generating the plot. Here is a demo of the same set of genes with dendrograms for both rows and columns. "],["expression-plot-module.html", "Chapter 7 Expression Plot Module 7.1 Browsing 7.2 Searched Expression Data 7.3 Data Table 7.4 Result Table 7.5 Rank Abundance Curve", " Chapter 7 Expression Plot Module This functional module allows Users to browse through a subset of genes/proteins. It also offers an option to plot expression of individually selected genes. Four different displays: Box Plot, Bar Plot, Violin Plot and Line Plot are made available to fit the Users’ preference. 7.1 Browsing This tab lets the Users plot out the expression of the DEGs/DEPs identified in the different comparisons. In this example below, we demonstrate how to display a few top genes as Violin Plots. 7.2 Searched Expression Data Another way to plot genes/proteins is using this functionality. Users can either enter a custom list of genes/proteins or select a list from online databases like KEGG, MSigDB etc. The selected genes/proteins can be plotted on a single plot or in multiple plots. Here is an example of plotting genes involved in MHCII antigen processing. The resulting plot shows the expression of a subset of genes from the MHCII antigen presentation family of genes. Many of them appear altered by gene KO in 2mon microglia, but also in all genotypes in 2yr microglia, as indicated in the publication. 7.3 Data Table This sub-tab lists the normalized data of the genes/proteins selected in “Searched Expression Data” (Section 6.2) as a searchable table. For a demo of this feature, we select a proteome dataset from published paper (Connor-Robson et al., 2019). Once the dataset is selected, we go into the “Searched Expression Data” sub-tab to select a gene set. Finally, we click the “Data Table” tab to look at the expression of the protein selected for a searchable table of values. 7.4 Result Table This tab lists the statistics results of the genes/proteins selected in “Searched Expression Data” as a searchable table. Each comparison defined is probed for the genes in the list and the P value and Fold changes are listed. This is specifically designed for the gene values, unlike “Data Table” in the previous section (6.3) that is designed for protein values. 7.5 Rank Abundance Curve This functionality helps identify the relative abundance of a list of genes within a dataset. This plot helps interpret the distribution of abundance and expression levels of a set of genes. A steep gradient indicates the genes are very different in their expression levels as the high-ranking species have much higher abundances than the low-ranking species. A shallow gradient indicates that the genes have very similar expression levels as the abundances of different species are similar. "],["gene-set-enrichment-module.html", "Chapter 8 Gene Set Enrichment Module 8.1 Gene Set Enrichment 8.2 Gene Expression 8.3 Gene Set Heat Map 8.4 KEGG Pathway View", " Chapter 8 Gene Set Enrichment Module This functionality in Quickomics is an extension to the differential gene identification. Users are able to use different cutoffs to filter out DEGs/DEPs in different comparisons and probe enriched pathways. This is a useful way to make biological sense of the data. 8.1 Gene Set Enrichment This first tab lets the users pick a particular comparison, apply different cutoff criteria and select from a list of different databases for enrichment analysis. To demonstrate usage of this functionality, we will use the Mouse Microglia RNA dataset to help answer the question which pathways were altered by Genotype and/or Age. Very similar to the results from Gyoneva et al., 2019, this analysis points to immune related terms being enriched in the down-regulated genes for 2mon_KOvs2mon_WT. Similarly, we pull out the GO enrichment for up-regulated genes. 8.2 Gene Expression For the enriched terms identified in the previous tab (Gene Set Enrichment, section 7.1), Users have the ability to look at the differential values of the genes present in the set. Here we are probing the GO_IMMUNE_RESPONSE identified in the down-regulated category. 8.3 Gene Set Heat Map Like the “Gene Expression” tab, Users have the ability to plot expression of the genes in the pathway term selected as a heatmap. This visualization shows that while the Immune Response genes are enriched in the differentially expressed genes list, not all of them change in the same direction. 8.4 KEGG Pathway View This functionality is available only to KEGG pathway terms. Users have the option to view the Fold Change levels of different genes in the KEGG pathway selected for up to 5 comparisons. In this example we demo the KEGG pathway “hsa04612 Antigen processing and presentation” as identified as a down-regulated term in the 2mon_KOvs2mon_WT and 1yr_KOvs1yr_WT comparisons. This figure identifies all the genes that are differentially expressed in this pathway. It is also clear that genes in the MHC I pathway do not change, but many genes in the MHC II pathway are down regulated in both the comparisons. The visualization is also useful to highlight whether or not a large proportion of genes in a pathway are altered by the perturbation. "],["pattern-clustering-module.html", "Chapter 9 Pattern Clustering Module 9.1 Clustering of Centroid Profiles 9.2 Data Table", " Chapter 9 Pattern Clustering Module This functional module in Quickomics helps cluster genes/proteins based on their expression profiles across different groups. Three different algorithms, soft (fuzzy) clustering, k-means and partitioning around medoids (PAM), are implemented. 9.1 Clustering of Centroid Profiles Users have the option to either select the DEGs/DEPS as the list of genes/proteins to cluster based off on or upload a custom gene list. DEGs/DEPs are selected based off all the comparisons, and cutoffs can be applied to limit the number of genes. In this example below, we use the top DEGs/DEPs with a Fold Change cutoff of 3 to identify 6 clusters of genes. Please note that this visualization for this dataset is novel and was not previously reported in Gyoneva et al., 2019. The genes in each cluster can be viewed in the “Data Table” tab. 9.2 Data Table The data table contains genes from the previous clusters, along with their expression values "],["correlation-network-module.html", "Chapter 10 Correlation Network Module 10.1 visNetwork 10.2 Data Table", " Chapter 10 Correlation Network Module This module helps build co-expression networks based on gene-gene or protein-protein correlations. This is especially useful during co-immunoprecipitation or pulldown proteomics experiments to identify protein partners. Users have the ability to enter 1 or more genes/proteins to identify if their expression is correlated. 10.1 visNetwork This uses the R package visNetwork to visualize the expression of correlated genes/proteins. Users have the ability to choose the R and P value cutoff for selecting the correlated genes/proteins. In this example below, we probe 3 genes and identify the expression of other genes that are correlated with them. The following network plot was produced. Gnai3 is part of a large network with multiple genes correlated with it. On the other hand, Klf6 was correlated with 2 other genes, while Btbd17 was not correlated with any genes. 10.2 Data Table The genes identified in the previous tab as part of the network plot are available as a table in this tab. Users can perform searches and sort based on correlation statistics. "],["venn-diagram-module.html", "Chapter 11 Venn Diagram Module 11.1 Venn Diagram 11.2 Venn Diagram (black &amp; white) 11.3 Intersection Output 11.4 DEG Table", " Chapter 11 Venn Diagram Module This module in Quickomics helps Users identify DEGs/DEPs that are common or unique to different comparisons within one project. Users have the option to either visualize these DEGs/DEPs as a highly customizable Venn Diagram or download a table with the gene names. 11.1 Venn Diagram To view the DEGs/DEPs as a Venn Diagram, Users have the option to see the intersection of DEGs/DEPs for up to 5 different comparisons. Users can also use all DEGs/DEPs or restrict it to the ones that are Up or Down regulated. In this example there were 33 DEGs that were identified in the three comparisons probed here, which represent the set of genes altered by the KO genotype at each of the time points. 11.2 Venn Diagram (black &amp; white) This tab has the same plot seen before in Section 10.1 but highly simplified and in black and white. 11.3 Intersection Output This tab lets the User view the individual genes that were present in the Venn Diagram and the distribution of the genes in intersection regions. 11.4 DEG Table This tab lets the Users view the Fold Change and P value of the genes identified in the Venn Diagram in the comparisons being queried. "],["venn-across-projects-module.html", "Chapter 12 Venn Across Projects Module 12.1 Venn Diagram 12.2 Intersection Output", " Chapter 12 Venn Across Projects Module This functionality in Quickomics is the only one that lets users probe more than one project/dataset together. The DEGs/DEPs identified in different comparisons across projects/datasets loaded in the interface can be compared here. By taking advantage of the “Protein Gene name” function, this module can be used to identify common DEGs/DEPs present in both RNAseq and Proteomics datasets of the same project. 12.1 Venn Diagram To illustrate this feature, we compare the two RNAseq and two Proteomic comparisons from Connor-Robson et al., 2019. We load 2 comparisons from each dataset/project and view the number of DEGs/DEPs that are common and different between the 4 comparisons. Users have the option to view this Venn Diagram as a Black &amp; White plot. 12.2 Intersection Output Like in 10.3 Intersection Output, Users can view the individual genes present in different regions of the Venn Diagram, like the ones identified in all the samples, or the ones only present in 3 of them. "],["output-module.html", "Chapter 13 Output Module", " Chapter 13 Output Module This final tab in Quickomics is available for Users to download plots in high resolution, including for use in publications. Users can save different plots by clicking on “Save to Output” present on the top left corner of the plot during analysis and exploration of the datasets in all previous tabs. Upon clicking on the “Output” tab as seen in the image below, Users can see a list of plots that are available to download to their local machine. "],["references.html", "Chapter 14 References", " Chapter 14 References Cotter,D. et al. (2006) LMPD: LIPID MAPS proteome database. Nucleic Acids Res., 34, D507–D510. Frolkis,A. et al. (2010) SMPDB: The Small Molecule Pathway Database. Nucleic Acids Res., 38, D480–D487. Jassal,B. et al. (2020) The reactome pathway knowledgebase. Nucleic Acids Res., 48, D498–D503. Kanehisa,M. and Goto,S. (2000) KEGG: kyoto encyclopedia of genes and genomes. Nucleic Acids Res., 28, 27–30. Liberzon,A. et al. (2015) The Molecular Signatures Database (MSigDB) hallmark gene set collection. Cell Syst., 1, 417–425. Martens,M. et al. (2020) WikiPathways: connecting communities. Nucleic Acids Res. Subramanian,A. et al. (2005) Gene set enrichment analysis: A knowledge-based approach for interpreting genome-wide expression profiles. Proc. Natl. Acad. Sci., 102, 15545 LP – 15550. The Gene Ontology Consortium (2019) The Gene Ontology Resource: 20 years and still GOing strong. Nucleic Acids Res., 47, D330–D338. "],["404.html", "Page not found", " Page not found The page you requested cannot be found (perhaps it was moved or renamed). You may want to try searching to find the page's new location, or use the table of contents to find the page you are looking for. "]]
